version: '2'
services:
  webserver:
    container_name: web-server
    build:
      context: .
      dockerfile: ./web/Dockerfile
    networks:
      ctf-public:            # Connect to the public CTF network
        ipv4_address: ${WEB_EXTERNAL_IP} # Assign a static IP on the public network (from .env)
    ports:
      - "1080:80"
    restart: unless-stopped
  webserver2:
    container_name: web-server2
    build:
      context: .
      dockerfile: ./web2/Dockerfile
    networks:
      ctf-public:            # Connect to the public CTF network
        ipv4_address: ${WEB_INTERNAL_IP} # Assign a static IP on the public network (from .env)
        aliases:
          - internal.evilcorp.org # Allow name resolution within the public network
      ctf-private:           # Also connect to the private CTF network
        aliases:
          - internal.evilcorp.org # Allow name resolution within the private network
    ports:
      - "2080:80"
    restart: unless-stopped
  ssh:
    container_name: ssh
    build:
      context: .
      dockerfile: ./ssh/Dockerfile
    ports:
      - "2222:22"            # SSH accessibile dalla rete pubblica dell'host
      - "3000:3000"
    networks:
      ctf-public:
        ipv4_address: ${SSH_TARGET_1_PUBLIC_IP} # Legge l'IP dal .env
      ctf-private:
        ipv4_address: ${SSH_TARGET_1_PRIVATE_IP} # Legge l'IP dal .env
    restart: unless-stopped

  ssh2:
    container_name: ssh2
    build:
      context: .
      dockerfile: ./ssh2/Dockerfile
    networks:
      ctf-private:
        ipv4_address: ${SSH_TARGET_2_PRIVATE_IP} # Legge l'IP dal .env
    ports:
      - "22:22"
    restart: unless-stopped
    read_only: true
    volumes:
      - /tmp:/tmp:rw
      - /var/tmp:/var/tmp:rw
      - /var/log:/var/log:rw
      - /var/run:/var/run:rw
      - /var/spool/cron:/var/spool/cron:rw
      - /dev/shm:/dev/shm:rw
    depends_on:
      ssh-target-1:
        condition: service_started
networks:
  ctf-public:
    driver: bridge             # Use a standard bridge network
    ipam:
      config:
        - subnet: ${CTF_PUBLIC_SUBNET} # Define the subnet for the public Docker network (from .env)
  ctf-private:
    driver: bridge
    ipam:
      config:
        - subnet: ${CTF_PRIVATE_SUBNET} # Define the subnet for the private Docker network (from .env)
